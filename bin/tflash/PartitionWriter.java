import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class PartitionWriter {
    private static final int BUFFER_SIZE = 400;
    private static final int PARTITION_SIZE = 4096 << 20; // Convert GB to bytes
    private static final String PARTITION_PATH = "./odin";
    private static final String CACHE_PATH = "./cache";
    private static ByteArrayOutputStream buffer;
    private static Path cachedFilePath;
    private static int totalBytesWritten;

    public static void main(String[] args) throws IOException, InterruptedException {
        // Setup
        Files.deleteIfExists(Paths.get(PARTITION_PATH));
        Files.createDirectories(Paths.get(CACHE_PATH));
        buffer = new ByteArrayOutputStream();
        totalBytesWritten = 0;

        // Loop forever
        while (true) {
            // Check if the partition is full
            if (totalBytesWritten == PARTITION_SIZE) {
                fillPartitionWithZeroes();
            }

            // Handle temporary file discovery and caching
            handleTempFileDiscovery();

            // Write the buffer to the partition
            writeBufferToPartition();

            // Print the elapsed time and statistics
            printElapsedTimeAndStatistics();
        }
    }

    // Other methods
}
